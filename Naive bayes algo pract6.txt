
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

# Load the Iris dataset
url = httpsraw.githubusercontent.comuiuc-csedata-fa14gh-pagesdatairis.csv
df = pd.read_csv(url)

# Display the first few rows
print(Dataset Previewn, df.head())

# Features and labels
X = df.drop('species', axis=1)  
y = df['species']                )

# Split into training and testing datasets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Naive Bayes Classifier
model = GaussianNB()
model.fit(X_train, y_train)

# Predict on test set
y_pred = model.predict(X_test)

# Evaluation
print(nConfusion Matrix)
print(confusion_matrix(y_test, y_pred))

print(nClassification Report)
print(classification_report(y_test, y_pred))

print(Accuracy Score, accuracy_score(y_test, y_pred))

def get_confusion_matrix_values(y_true, y_pred):
    cm = confusion_matrix(y_true, y_pred)
    return(cm[0][0], cm[0][1], cm[1][0], cm[1][1])

TP, FP, FN, TN = get_confusion_matrix_values(y_test, y_pred)
print("TP: ", TP)
print("FP: ", FP)
print("FN: ", FN)
print("TN: ", TN)

print("The Accuracy is ", (TP+TN)/(TP+TN+FP+FN))
print("The precision is ", TP/(TP+FP))
print("The recall is ", TP/(TP+FN))

